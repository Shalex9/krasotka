/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$benefit-logo-name: 'benefit-logo';
$benefit-logo-x: 0px;
$benefit-logo-y: 494px;
$benefit-logo-offset-x: 0px;
$benefit-logo-offset-y: -494px;
$benefit-logo-width: 736px;
$benefit-logo-height: 240px;
$benefit-logo-total-width: 1038px;
$benefit-logo-total-height: 1070px;
$benefit-logo-image: '../img/logo.png';
$benefit-logo: (0px, 494px, 0px, -494px, 736px, 240px, 1038px, 1070px, '../img/logo.png', 'benefit-logo', );
$catrice-name: 'catrice';
$catrice-x: 0px;
$catrice-y: 71px;
$catrice-offset-x: 0px;
$catrice-offset-y: -71px;
$catrice-width: 539px;
$catrice-height: 129px;
$catrice-total-width: 1038px;
$catrice-total-height: 1070px;
$catrice-image: '../img/logo.png';
$catrice: (0px, 71px, 0px, -71px, 539px, 129px, 1038px, 1070px, '../img/logo.png', 'catrice', );
$la-girl-name: 'la-girl';
$la-girl-x: 0px;
$la-girl-y: 340px;
$la-girl-offset-x: 0px;
$la-girl-offset-y: -340px;
$la-girl-width: 482px;
$la-girl-height: 154px;
$la-girl-total-width: 1038px;
$la-girl-total-height: 1070px;
$la-girl-image: '../img/logo.png';
$la-girl: (0px, 340px, 0px, -340px, 482px, 154px, 1038px, 1070px, '../img/logo.png', 'la-girl', );
$maybelline-name: 'maybelline';
$maybelline-x: 0px;
$maybelline-y: 0px;
$maybelline-offset-x: 0px;
$maybelline-offset-y: 0px;
$maybelline-width: 509px;
$maybelline-height: 71px;
$maybelline-total-width: 1038px;
$maybelline-total-height: 1070px;
$maybelline-image: '../img/logo.png';
$maybelline: (0px, 0px, 0px, 0px, 509px, 71px, 1038px, 1070px, '../img/logo.png', 'maybelline', );
$nyx-name: 'nyx';
$nyx-x: 0px;
$nyx-y: 200px;
$nyx-offset-x: 0px;
$nyx-offset-y: -200px;
$nyx-width: 300px;
$nyx-height: 140px;
$nyx-total-width: 1038px;
$nyx-total-height: 1070px;
$nyx-image: '../img/logo.png';
$nyx: (0px, 200px, 0px, -200px, 300px, 140px, 1038px, 1070px, '../img/logo.png', 'nyx', );
$paese-name: 'paese';
$paese-x: 0px;
$paese-y: 734px;
$paese-offset-x: 0px;
$paese-offset-y: -734px;
$paese-width: 1038px;
$paese-height: 336px;
$paese-total-width: 1038px;
$paese-total-height: 1070px;
$paese-image: '../img/logo.png';
$paese: (0px, 734px, 0px, -734px, 1038px, 336px, 1038px, 1070px, '../img/logo.png', 'paese', );
$spritesheet-width: 1038px;
$spritesheet-height: 1070px;
$spritesheet-image: '../img/logo.png';
$spritesheet-sprites: ($benefit-logo, $catrice, $la-girl, $maybelline, $nyx, $paese, );
$spritesheet: (1038px, 1070px, '../img/logo.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
